{"ast":null,"code":"var _jsxFileName = \"/Users/mathiaskolberg/Library/Mobile Documents/com~apple~CloudDocs/Projects/react/java-ts-todo/client/src/components/TodoAdder/TodoAdder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormInput from './FormInput';\nimport './TodoAdder.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoAdder = _ref => {\n  _s();\n\n  let {\n    getTodos\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await fetch('http://localhost:8080/api/todos', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: uuidv4(),\n        text: inputValue,\n        isComplete: false\n      })\n    });\n    await getTodos();\n    setInputValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-adder\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"text\",\n      name: \"add\",\n      value: inputValue,\n      onChange: e => {\n        setInputValue(e.target.value);\n      },\n      label: \"Add a todo\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-adder__button\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoAdder, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n\n_c = TodoAdder;\nexport default TodoAdder;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoAdder\");","map":{"version":3,"sources":["/Users/mathiaskolberg/Library/Mobile Documents/com~apple~CloudDocs/Projects/react/java-ts-todo/client/src/components/TodoAdder/TodoAdder.jsx"],"names":["useState","v4","uuidv4","FormInput","TodoAdder","getTodos","inputValue","setInputValue","handleSubmit","e","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","id","text","isComplete","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,yBAAP;;;AAEA,MAAMC,SAAS,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFoC;AAM7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,EAAE,EAAEhB,MAAM,EADS;AAEnBiB,QAAAA,IAAI,EAAEb,UAFa;AAGnBc,QAAAA,UAAU,EAAE;AAHO,OAAf;AANuC,KAApC,CAAX;AAYA,UAAMf,QAAQ,EAAd;AAEAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAjBD;;AAmBA,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEC,YAAvC;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,KAAK,EAAEF,UAHT;AAIE,MAAA,QAAQ,EAAEG,CAAC,IAAI;AACbF,QAAAA,aAAa,CAACE,CAAC,CAACY,MAAF,CAASC,KAAV,CAAb;AACD,OANH;AAOE,MAAA,KAAK,EAAC,YAPR;AAQE,MAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArCD;;GAAMlB,S;;KAAAA,S;AAuCN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport FormInput from './FormInput';\nimport './TodoAdder.styles.scss';\n\nconst TodoAdder = ({ getTodos }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await fetch('http://localhost:8080/api/todos', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        id: uuidv4(),\n        text: inputValue,\n        isComplete: false,\n      }),\n    });\n    await getTodos();\n\n    setInputValue('');\n  };\n\n  return (\n    <form className='todo-adder' onSubmit={handleSubmit}>\n      <FormInput\n        type='text'\n        name='add'\n        value={inputValue}\n        onChange={e => {\n          setInputValue(e.target.value);\n        }}\n        label='Add a todo'\n        required\n      />\n      <button className='todo-adder__button'>Submit</button>\n    </form>\n  );\n};\n\nexport default TodoAdder;\n"]},"metadata":{},"sourceType":"module"}